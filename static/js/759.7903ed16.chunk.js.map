{"version":3,"file":"static/js/759.7903ed16.chunk.js","mappings":"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","sources":["redux/filter/filter.selectors.js","redux/contacts/contacts.selectors.js","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/Box/Box.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/NotFound/NotFound.styled.jsx","components/NotFound/NotFound.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Loader/Loader.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectFilter = state => state.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from '../filter/filter.selectors';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n\n  position: relative;\n  padding-left: 20px;\n\n  & + & {\n    margin-top: 5px;\n  }\n\n  ::before {\n    content: '';\n    position: absolute;\n    display: block;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 10px;\n    height: 10px;\n    border-radius: ${p => p.theme.radii.round};\n    background-color: ${p => p.theme.colors.blue};\n  }\n`;\n\nexport const ContactsText = styled.p`\n  font-size: ${p => p.theme.fontSizes.ml};\n  min-width: 250px;\n`;\n\nexport const ContactsNumber = styled.span`\n  font-size: ${p => p.theme.fontSizes.ml};\n  min-width: 150px;\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  margin-left: 20px;\n  border-radius: ${p => p.theme.radii.normal};\n  background-image: linear-gradient(\n    ${p => p.theme.colors.blue} 50%,\n    ${p => p.theme.colors.yellow} 50%\n  );\n  cursor: pointer;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  ListItem,\n  ContactsText,\n  ContactsNumber,\n  Button,\n} from './ContactItem.styled';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ListItem key={id}>\n      <ContactsText>{name}:</ContactsText>\n      <ContactsNumber>{number}</ContactsNumber>\n      <Button type=\"button\" onClick={handleDelete}>\n        Delete\n      </Button>\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position\n);\n","import { useSelector } from 'react-redux';\n\nimport { selectVisibleContacts } from 'redux/contacts/contacts.selectors';\n\nimport { ContactItem } from 'components/ContactItem';\nimport { Box } from '../Box';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <Box mt={10} ml={30} as=\"ul\">\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem key={id} id={id} name={name} number={number} />\n      ))}\n    </Box>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledInput = styled.input`\n  display: block;\n  margin-top: 3px;\n  padding: 5px 15px;\n`;\n\nexport const StyledButton = styled.button`\n  margin-top: 10px;\n\n  display: inline-flex;\n  border-radius: ${p => p.theme.radii.normal};\n  background-image: linear-gradient(\n    ${p => p.theme.colors.blue} 50%,\n    ${p => p.theme.colors.yellow} 50%\n  );\n  cursor: pointer;\n`;\n\nexport const StyledLabel = styled.label`\n  display: block;\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.bold};\n\n  :not(:first-child) {\n    margin-top: 5px;\n  }\n`;\n\nexport const StyledForm = styled.form`\n  margin-top: 10px;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { nanoid } from '@reduxjs/toolkit';\n\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/contacts.selectors';\n\nimport {\n  StyledInput,\n  StyledButton,\n  StyledLabel,\n  StyledForm,\n} from './ContactForm.styled';\n\nexport function ContactForm() {\n  const [contactName, setContactName] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setContactName(value);\n        break;\n\n      case 'number':\n        setContactNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n\n    const {\n      elements: { number, name },\n    } = evt.target;\n\n    const contact = {\n      id: nanoid(),\n      name: name.value,\n      number: number.value,\n    };\n\n    const contactsInclude = contacts.some(el => el.name === name.value);\n\n    if (contactsInclude) {\n      toast.error(`${name.value} is already in contacts`);\n      setContactName('');\n      setContactNumber(number.value);\n      return;\n    }\n\n    dispatch(addContact(contact));\n\n    setContactNumber('');\n    setContactName('');\n  }\n\n  return (\n    <>\n      <StyledForm onSubmit={handleSubmit}>\n        <StyledLabel>\n          Name\n          <StyledInput\n            type=\"text\"\n            name=\"name\"\n            value={contactName}\n            onChange={handleInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </StyledLabel>\n\n        <StyledLabel>\n          Number\n          <StyledInput\n            type=\"tel\"\n            name=\"number\"\n            value={contactNumber}\n            onChange={handleInputChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </StyledLabel>\n\n        <StyledButton type=\"submit\">Add contact</StyledButton>\n      </StyledForm>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 10px;\n`;\n","import image from './noposts.jpeg';\nimport { Wrapper } from './NotFound.styled';\n\nexport const NotFound = () => {\n  return (\n    <Wrapper>\n      <img src={image} alt=\"not found\" style={{ width: 300 }} />\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  display: block;\n  margin-top: 3px;\n  padding: 5px 15px;\n`;\nexport const Label = styled.label`\n  display: block;\n  font-size: ${p => p.theme.fontSizes.m};\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { contactsSearchAction } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/filter/filter.selectors';\n\nimport { Box } from '../Box';\nimport { Input, Label } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = evt => {\n    dispatch(contactsSearchAction(evt.target.value));\n  };\n\n  return (\n    <Box mt={10}>\n      <Label>\n        Find contacts by name\n        <Input type=\"text\" value={filter} onChange={changeFilter} />\n      </Label>\n    </Box>\n  );\n};\n","import { ColorRing } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <ColorRing\n    visible={true}\n    height=\"80\"\n    width=\"80\"\n    ariaLabel=\"blocks-loading\"\n    wrapperStyle={{\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    }}\n    wrapperClass=\"blocks-wrapper\"\n    colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n  />\n);\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet-async';\nimport { ContactList } from 'components/ContactList';\nimport { ContactForm } from 'components/ContactForm';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/contacts.selectors';\nimport { Box } from 'components/Box';\nimport { NotFound } from 'components/NotFound';\nimport { Filter } from 'components/Filter';\nimport { Loader } from 'components/Loader';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n\n      <Box px={20} pt={10}>\n        <h1>Phonebook</h1>\n        <ContactForm />\n\n        {error && <NotFound />}\n        {!error && (\n          <Box mt={20}>\n            <h2>Contacts</h2>\n            <Filter />\n            {isLoading && !error && <Loader />}\n            <ContactList />\n          </Box>\n        )}\n      </Box>\n    </>\n  );\n}\n"],"names":["selectFilter","state","filter","selectContacts","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","ListItem","styled","p","theme","radii","round","colors","blue","ContactsText","fontSizes","ml","ContactsNumber","Button","normal","yellow","ContactItem","id","number","dispatch","useDispatch","type","onClick","deleteContact","Box","color","space","layout","flexbox","grid","background","border","position","ContactList","useSelector","mt","as","map","StyledInput","StyledButton","StyledLabel","m","fontWeights","bold","StyledForm","ContactForm","useState","contactName","setContactName","contactNumber","setContactNumber","handleInputChange","evt","target","value","onSubmit","preventDefault","elements","nanoid","some","el","toast","addContact","onChange","pattern","title","required","Wrapper","NotFound","src","image","alt","style","width","Input","Label","Filter","contactsSearchAction","Loader","visible","height","ariaLabel","wrapperStyle","marginLeft","marginRight","wrapperClass","Contacts","useEffect","fetchContacts","px","pt"],"sourceRoot":""}