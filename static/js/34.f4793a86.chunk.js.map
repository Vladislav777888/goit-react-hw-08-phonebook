{"version":3,"file":"static/js/34.f4793a86.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","redux/filter/filter.selectors.js","redux/contacts/contacts.selectors.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { ColorRing } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <ColorRing\n    visible={true}\n    height=\"80\"\n    width=\"80\"\n    ariaLabel=\"blocks-loading\"\n    wrapperStyle={{\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    }}\n    wrapperClass=\"blocks-wrapper\"\n    colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n  />\n);\n","export const selectFilter = state => state.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from '../filter/filter.selectors';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { Avatar, Button, Link, Stack, Text } from '@chakra-ui/react';\n\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <Stack direction={'row'} spacing=\"20px\" alignItems={'center'} as=\"li\">\n      <Avatar\n        justifyContent={'center'}\n        boxSize=\"20px\"\n        bg={'green.400'}\n        _hover={{ bg: '#f08282' }}\n      />\n      <Text color=\"red\" fontWeight=\"bold\" ml=\"30px\" w=\"500px\">\n        {name}:{' '}\n        <Link href=\"tel:+{number} \" color=\"teal.500\">\n          {number}\n        </Link>\n      </Text>\n      <Button\n        colorScheme=\"yellow\"\n        variant=\"solid\"\n        onClick={handleDelete}\n        h=\"25px\"\n      >\n        Delete\n      </Button>\n    </Stack>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box, Button, Text } from '@chakra-ui/react';\nimport { ArrowBackIcon } from '@chakra-ui/icons';\n\nimport {\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/contacts.selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectFilter } from 'redux/filter/filter.selectors';\n\nimport { ContactItem } from 'components/ContactItem';\nimport { Loader } from 'components/Loader';\n\nexport const ContactList = ({ redirect }) => {\n  const contacts = useSelector(selectVisibleContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box as=\"ul\" display=\"flex\" gap=\"10px\" mt=\"15px\" flexDirection=\"column\">\n      {!isLoading && contacts.length === 0 && filter.length === 0 && (\n        <>\n          <Text textAlign=\"center\" fontSize=\"3xl\">\n            You don't have contacts\n          </Text>\n          <Box display=\"flex\" justifyContent=\"center\">\n            <Button\n              as={NavLink}\n              to=\"/contacts\"\n              onClick={redirect}\n              leftIcon={<ArrowBackIcon />}\n              colorScheme=\"yellow\"\n              variant=\"solid\"\n              maxW=\"150px\"\n            >\n              Back\n            </Button>\n          </Box>\n        </>\n      )}\n      {isLoading && !error && <Loader />}\n      {contacts.length > 0 &&\n        contacts.map(({ id, name, number }) => (\n          <ContactItem key={id} id={id} name={name} number={number} />\n        ))}\n    </Box>\n  );\n};\n\nContactList.propTypes = {\n  redirect: PropTypes.func,\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { nanoid } from '@reduxjs/toolkit';\nimport {\n  Box,\n  Button,\n  FormControl,\n  Input,\n  InputGroup,\n  InputLeftAddon,\n  Stack,\n} from '@chakra-ui/react';\n\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/contacts.selectors';\n\nexport function ContactForm() {\n  const [contactName, setContactName] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setContactName(value);\n        break;\n\n      case 'number':\n        setContactNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n\n    const {\n      elements: { number, name },\n    } = evt.target;\n\n    if (name.value.trim() === '') {\n      setContactName('');\n      return toast.warning('Form fields must not be empty', {\n        autoClose: 1500,\n      });\n    }\n\n    if (number.value.trim() === '') {\n      setContactNumber('');\n      return toast.warning('Form fields must not be empty', {\n        autoClose: 1500,\n      });\n    }\n\n    const contact = {\n      id: nanoid(),\n      name: name.value,\n      number: '+380-' + number.value,\n    };\n\n    const contactsInclude = contacts.some(el => el.name === name.value);\n\n    if (contactsInclude) {\n      toast.error(`${name.value} is already in contacts`, {\n        autoClose: 1500,\n      });\n      setContactName('');\n      setContactNumber(number.value);\n      return;\n    }\n\n    dispatch(addContact(contact));\n    toast.success(`${name.value} add to your contacts`, {\n      autoClose: 1500,\n    });\n\n    setContactNumber('');\n    setContactName('');\n  }\n\n  return (\n    <>\n      <FormControl as=\"form\" onSubmit={handleSubmit} autoComplete=\"off\">\n        <Stack spacing=\"10px\">\n          <Input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"Name\"\n            variant=\"outline\"\n            value={contactName}\n            onChange={handleInputChange}\n            w=\"300px\"\n          />\n\n          <InputGroup w=\"300px\">\n            <InputLeftAddon children=\"+380\" />\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              id=\"number\"\n              placeholder=\"Phone number\"\n              variant=\"outline\"\n              value={contactNumber}\n              onChange={handleInputChange}\n            />\n          </InputGroup>\n\n          <Box display=\"flex\" justifyContent=\"center\" w=\"300px\">\n            <Button type=\"submit\" maxW=\"100px\" colorScheme=\"yellow\" mt=\"20px\">\n              Add contact\n            </Button>\n          </Box>\n        </Stack>\n      </FormControl>\n    </>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Button, Input, InputGroup, InputRightElement } from '@chakra-ui/react';\nimport { CloseIcon } from '@chakra-ui/icons';\n\nimport { contactsSearchAction } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/filter/filter.selectors';\nimport { selectVisibleContacts } from 'redux/contacts/contacts.selectors';\n\nexport const Filter = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = evt => {\n    dispatch(contactsSearchAction(evt.target.value));\n  };\n\n  const handleReset = () => {\n    dispatch(contactsSearchAction(''));\n  };\n\n  return (\n    <>\n      {(contacts.length > 0 || filter.length > 0) && (\n        <>\n          <InputGroup>\n            <Input\n              type=\"text\"\n              value={filter}\n              onChange={changeFilter}\n              placeholder=\"Find contact by name\"\n            />\n            <InputRightElement width=\"4.5rem\">\n              {filter.length > 0 && (\n                <Button\n                  h=\"1.75rem\"\n                  size=\"sm\"\n                  variant={'ghost'}\n                  onClick={handleReset}\n                >\n                  <CloseIcon />\n                </Button>\n              )}\n            </InputRightElement>\n          </InputGroup>\n        </>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\n\nimport {\n  Box,\n  Container,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n} from '@chakra-ui/react';\n\nimport { ContactList } from 'components/ContactList';\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\n\nexport default function Contacts() {\n  const [tabIndex, setTabIndex] = useState(0);\n\n  const handleTabsChange = index => {\n    setTabIndex(index);\n  };\n\n  const handleRedirect = () => {\n    setTabIndex(0);\n  };\n\n  return (\n    <Box as=\"section\">\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <Container\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        maxW=\"700px\"\n        mr=\"auto\"\n        ml=\"auto\"\n        p={3}\n      >\n        <Tabs\n          p=\"20px\"\n          variant=\"enclosed\"\n          w={'100%'}\n          index={tabIndex}\n          onChange={handleTabsChange}\n        >\n          <TabList>\n            <Tab p={4} _selected={{ color: 'white', bg: '#f08282' }}>\n              Add contact\n            </Tab>\n            <Tab p={4} _selected={{ color: 'white', bg: '#f08282' }}>\n              All contacts\n            </Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel>\n              <ContactForm />\n            </TabPanel>\n            <TabPanel>\n              <Filter />\n              <ContactList redirect={handleRedirect} />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Container>\n    </Box>\n  );\n}\n"],"names":["Loader","visible","height","width","ariaLabel","wrapperStyle","marginLeft","marginRight","wrapperClass","colors","selectFilter","state","filter","selectContacts","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","ContactItem","id","number","dispatch","useDispatch","direction","spacing","alignItems","as","justifyContent","boxSize","bg","_hover","color","fontWeight","ml","w","href","colorScheme","variant","onClick","deleteContact","h","ContactList","redirect","useSelector","useEffect","fetchContacts","display","gap","mt","flexDirection","length","textAlign","fontSize","NavLink","to","leftIcon","maxW","map","ContactForm","useState","contactName","setContactName","contactNumber","setContactNumber","handleInputChange","evt","target","value","onSubmit","preventDefault","elements","trim","toast","autoClose","nanoid","some","el","addContact","autoComplete","I","type","placeholder","onChange","children","Filter","contactsSearchAction","size","Contacts","tabIndex","setTabIndex","mr","p","index","_selected"],"sourceRoot":""}