{"version":3,"file":"static/js/20.b3fca4b3.chunk.js","mappings":"8LAEaA,EAAS,kBACpB,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CACZC,WAAY,OACZC,YAAa,QAEfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,YAXnC,C,wRCkBTC,EAAe,WAC1B,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAwBN,EAAAA,EAAAA,WAAS,GAAjC,eAAOO,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAIrBC,EAAoB,SAAAC,GACxB,MAAwBA,EAAIC,OAApBf,EAAR,EAAQA,KAAMgB,EAAd,EAAcA,MAEd,OAAQhB,GACN,IAAK,OACHC,EAAQe,GACR,MAEF,IAAK,QACHb,EAASa,GACT,MAEF,IAAK,WACHX,EAAYW,GACZ,MAEF,QACE,OAEL,EAEKC,EAAY,mCAAG,WAAMH,GAAN,sFACnBA,EAAII,iBADe,EAGeJ,EAAIK,cAA9BnB,EAHW,EAGXA,KAAME,EAHK,EAGLA,MAAOE,EAHF,EAGEA,SAEfgB,EAAU,CACdpB,KAAMA,EAAKgB,MACXd,MAAOA,EAAMc,MACbZ,SAAUA,EAASY,OARF,kBAYXR,GAASa,EAAAA,EAAAA,IAASD,IAAUE,SAZjB,OAajBrB,EAAQ,IACRE,EAAS,IACTE,EAAY,IACZkB,EAAAA,GAAAA,QAAc,UAAW,CACvBC,UAAW,OAjBI,kDAoBjBD,EAAAA,GAAAA,MAAY,uDAAwD,CAClEC,UAAW,OArBI,0DAAH,sDA0BlB,OACE,gCACGd,IAAWe,EAAAA,EAAAA,UAAkB,SAACrC,EAAA,EAAD,KAC9B,SAAC,KAAD,CAAasC,GAAG,OAAOC,SAAUV,EAAcW,aAAa,MAA5D,UACE,UAAC,IAAD,CAAOC,QAAQ,OAAf,WACE,SAAC,EAAAC,EAAD,CACEC,KAAK,OACL/B,KAAK,OACLgB,MAAOhB,EACPgC,GAAG,OACHC,YAAY,OACZC,QAAQ,UACRC,SAAUtB,KAGZ,SAAC,EAAAiB,EAAD,CACEC,KAAK,QACL/B,KAAK,QACLgB,MAAOd,EACP8B,GAAG,QACHC,YAAY,QACZC,QAAQ,UACRC,SAAUtB,KAGZ,UAAC,IAAD,CAAYuB,KAAK,KAAjB,WACE,SAAC,EAAAN,EAAD,CACEO,GAAG,SACHN,KAAMzB,EAAO,OAAS,WACtBN,KAAK,WACLgB,MAAOZ,EACP4B,GAAG,WACHC,YAAY,WACZC,QAAQ,UACRC,SAAUtB,KAEZ,SAAC,IAAD,CAAmBtB,MAAM,SAAzB,UACE,SAAC,IAAD,CAAQ+C,EAAE,UAAUF,KAAK,KAAKG,QAtFtB,kBAAMhC,GAASD,EAAf,EAsFR,SACGA,EAAO,OAAS,eAKvB,SAAC,KAAD,CAAKkC,QAAQ,OAAOC,eAAe,SAAnC,UACE,SAAC,IAAD,CAAQC,KAAK,QAAQC,YAAY,SAASC,GAAG,OAAOb,KAAK,SAAzD,+BAQX,EC5Hc,SAASc,IACtB,OACE,iCACE,SAAC,KAAD,WACE,+CAEF,SAAC,KAAD,CAAKnB,GAAG,UAAR,UACE,SAAC,IAAD,CACEc,QAAQ,OACRM,cAAc,SACdL,eAAe,SACfM,WAAW,SACXL,KAAK,QACLM,GAAG,IANL,UAQE,SAAClD,EAAD,UAKT,C","sources":["components/Loader/Loader.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import { ColorRing } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <ColorRing\n    visible={true}\n    height=\"80\"\n    width=\"80\"\n    ariaLabel=\"blocks-loading\"\n    wrapperStyle={{\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    }}\n    wrapperClass=\"blocks-wrapper\"\n    colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n  />\n);\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  Box,\n  Button,\n  FormControl,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Stack,\n} from '@chakra-ui/react';\n\nimport { register } from 'redux/auth/auth.operations';\nimport { selectAuthStatus } from 'redux/auth/auth.selectors';\n\nimport { STATUS } from 'constants';\nimport { Loader } from 'components/Loader';\n\nexport const RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [show, setShow] = useState(false);\n  const dispatch = useDispatch();\n  const status = useSelector(selectAuthStatus);\n\n  const handleClick = () => setShow(!show);\n\n  const handleInputChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n\n    const { name, email, password } = evt.currentTarget;\n\n    const newUser = {\n      name: name.value,\n      email: email.value,\n      password: password.value,\n    };\n\n    try {\n      await dispatch(register(newUser)).unwrap();\n      setName('');\n      setEmail('');\n      setPassword('');\n      toast.success('Success', {\n        autoClose: 1500,\n      });\n    } catch {\n      toast.error('This email already exists or the password is invalid', {\n        autoClose: 1500,\n      });\n    }\n  };\n\n  return (\n    <>\n      {status === STATUS.loading && <Loader />}\n      <FormControl as=\"form\" onSubmit={handleSubmit} autoComplete=\"off\">\n        <Stack spacing=\"10px\">\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            id=\"name\"\n            placeholder=\"Name\"\n            variant=\"outline\"\n            onChange={handleInputChange}\n          />\n\n          <Input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            id=\"email\"\n            placeholder=\"Email\"\n            variant=\"outline\"\n            onChange={handleInputChange}\n          />\n\n          <InputGroup size=\"md\">\n            <Input\n              pr=\"4.5rem\"\n              type={show ? 'text' : 'password'}\n              name=\"password\"\n              value={password}\n              id=\"password\"\n              placeholder=\"Password\"\n              variant=\"outline\"\n              onChange={handleInputChange}\n            />\n            <InputRightElement width=\"4.5rem\">\n              <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n                {show ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n\n          <Box display=\"flex\" justifyContent=\"center\">\n            <Button maxW=\"100px\" colorScheme=\"yellow\" mt=\"20px\" type=\"submit\">\n              Register\n            </Button>\n          </Box>\n        </Stack>\n      </FormControl>\n    </>\n  );\n};\n","import { Helmet } from 'react-helmet-async';\nimport { Box, Container } from '@chakra-ui/react';\n\nimport { RegisterForm } from 'components/RegisterForm';\n\nexport default function Register() {\n  return (\n    <>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <Box as=\"section\">\n        <Container\n          display=\"flex\"\n          flexDirection=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          maxW=\"350px\"\n          py=\"6\"\n        >\n          <RegisterForm />\n        </Container>\n      </Box>\n    </>\n  );\n}\n"],"names":["Loader","visible","height","width","ariaLabel","wrapperStyle","marginLeft","marginRight","wrapperClass","colors","RegisterForm","useState","name","setName","email","setEmail","password","setPassword","show","setShow","dispatch","useDispatch","status","useSelector","selectAuthStatus","handleInputChange","evt","target","value","handleSubmit","preventDefault","currentTarget","newUser","register","unwrap","toast","autoClose","STATUS","as","onSubmit","autoComplete","spacing","I","type","id","placeholder","variant","onChange","size","pr","h","onClick","display","justifyContent","maxW","colorScheme","mt","Register","flexDirection","alignItems","py"],"sourceRoot":""}